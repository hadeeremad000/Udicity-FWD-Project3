version: 2.1
jobs:
  myjob1:  # Choose any name, such as `build`
      # The primary container, where your job's commands will run
      docker:
        - image: amazon/aws-cli   
      steps:
        - checkout # check out the code in the project directory
        - run:
           name: Install tar utility
           command: |
             yum install -y tar gzip     
        - run: 
           name: create directory
           command: |
             mkdir ~/tmp
        - run:
           name: create file
           command: |
             touch ~/tmp/output.txt     
        - run:
           name: Create Cloudformation Stack
           command: |
             aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1             
        - run:
           name: copy ip in inventory file
           command: |
             aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text >> ~/tmp/output.txt
        - run:
           name: check ip attached
           command: | 
             cat ~/tmp/output.txt
        - persist_to_workspace:
             root: ~/tmp
             paths:
               - output.txt             
  configure_infrastructure:
      docker:
       - image: python:3.7-alpine3.11
      steps:      
   
        - checkout
        - attach_workspace:
            at: ~/tmp
        - run: cat ~/tmp/output.txt >> inventory.txt
        - run: cat inventory.txt
        - add_ssh_keys:
             # You can get this ID in the section where you registered the SSH Key
             fingerprints: ["8b:05:b2:00:a7:f2:40:16:3d:eb:c6:d0:5c:1c:df:50"]
      
        - run:
           name: Install Ansible
           command: |
              apk add --update ansible
          # Install Ansible
        - run:
           name: Run Playbook and Configure server
           command: |
              ansible-playbook -i inventory.txt main.yml

  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
  smoke_test:
   docker:
   - image: alpine:latest
   steps:
   - run:
       name: Test job
       # Fail the job intentionally to simulate an error.
       command:  return 1
                 
  smoke_test:
    docker:
    - image: alpine:latest
    steps:
     - run:
         name: Test job
       # Fail the job intentionally to simulate an error.
         command:  return 1
          - destroy_environment

workflows:
  myWorkflow:        
    jobs:
            #- myjob1
      - configure_infrastructure:
           requires:
            - myjob1
